JDK 19 Merupakan versi terbaru yang dirilis beberapa hari yang lalu. JDK 19 menyediakan pembaruan dan peningkatan dengan tujuh Enhancement Proposals JDK (JEP). 
Sebagian besar pembaruan ini akan dihadirkan sebagai fitur pratinjau tindak lanjut yang meningkatkan fungsionalitas yang diperkenalkan pada versi sebelumnya.

JDK 19 memberikan peningkatan bahasa dalam proyek OpenJDK Amber (Pola Rekam dan Pencocokan Pola untuk Switch);
peningkatan perpustakaan untuk beroperasi dengan Kode non-Java (Fungsi Asing dan API Memori) dan memanfaatkan instruksi vektor (API Vektor) dari proyek OpenJDK Panama; 
dan pratinjau pertama untuk Project Loom (Utas Virtual dan Konkurensi Terstruktur), yang secara drastis akan mengurangi upaya yang diperlukan untuk menulis dan memelihara
aplikasi bersamaan dengan throughput tinggi di Java.

Adapun pembaruan paling signifikan yang disampaikan di Java 19 adalah;

Pembaruan dan Peningkatan Bahasa

1. JEP 405: Pola Rekam (Preview): Memungkinkan pengguna untuk menyusun pola rekaman dan pola tipe untuk membuat bentuk navigasi dan pemrosesan data yang kuat, deklaratif,
   dan dapat disusun. Ini memperluas pencocokan pola untuk memungkinkan permintaan data yang lebih canggih dan dapat disusun.

2. JEP 427: Pencocokan Pola untuk Switch (Preview Ketiga): Mengaktifkan pencocokan pola untuk switch expressions dan pernyataan dengan mengizinkan suatu expression diuji 
   terhadap sejumlah pola. Ini memungkinkan pengguna untuk mengekspresikan permintaan berorientasi data yang kompleks secara ringkas dan aman.

Alat Perpustakaan

3. JEP 424: Foreign Function and Memory API (Preview): Memungkinkan program Java untuk lebih mudah beroperasi dengan kode dan data di luar runtime Java. 
   Dengan menjalankan fungsi asing secara efisien (yaitu, kode di luar Java Virtual Machine [JVM]), dan dengan mengakses memori asing dengan aman (yaitu, memori yang 
   tidak dikelola oleh JVM), API ini memungkinkan program Java untuk memanggil pustaka asli dan memproses data asli melalui model pengembangan Java murni. 
   Hal ini menghasilkan peningkatan kemudahan penggunaan, kinerja, fleksibilitas, dan keamanan.

4. JEP 426: Vector API (Incubator Keempat): Memungkinkan kinerja yang unggul dibandingkan dengan komputasi skalar yang setara dengan mengekspresikan komputasi vektor 
   yang dikompilasi secara andal saat runtime ke instruksi vektor pada arsitektur CPU yang di support Ports.

5. JEP 422: Port Linux/RISC-V: Mengatur tahapan untuk implementasi Linux/RISC-V yang lebih mudah dengan mengintegrasikan port ini ke dalam repositori jalur utama JDK. 
   Preview Proyek Loom / Fitur Incubator.

6. JEP 425: Virtual Threads (Preview): Secara drastis mengurangi upaya menulis, memelihara dan mengamati aplikasi bersamaan dengan throughput tinggi dengan 
   memperkenalkan virtual thread ringan ke Platform Java. Dengan menggunakan virtual threads memungkinkan developer untuk dengan mudah memecahkan masalah, men-debug, 
   dan membuat profil aplikasi bersamaan dengan alat dan teknik JDK yang ada.

7. JEP 428: Structured Concurrency (Incubator): Menyederhanakan dan menangani kesalahan atau eror, meningkatkan keandalan dan meningkatkan observabilitas dengan 
   menyederhanakan pemrograman multithreaded dan memperlakukan banyak tugas yang berjalan di thread yang berbeda sebagai satu unit kerja.

Kehadiran Java 19 adalah hasil kolaborasi ekstensif antara insinyur Oracle dan anggota lain dari komunitas developer Java di seluruh dunia melalui Proyek OpenJDK dan 
Java Community Process (JCP).

Selain peningkatan baru, Java 19 didukung oleh Java Management Service layanan asli Oracle Cloud Infrastructure (OCI) â€“ yang menyediakan panel kaca tunggal untuk 
membantu organisasi mengelola runtime dan aplikasi Java di lokasi atau di cloud apa pun.
